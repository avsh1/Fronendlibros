@page "/prestamo/index"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml">Préstamos</MudText>

<MudTable Items="@filteredPrestamos" Dense="true" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudFab StartIcon="@Icons.Material.Filled.Add" Style="background-color: #2979FF; color: white;" OnClick="goAdd" />
        <MudSpacer />
        <MudTextField @bind-Value="searchText" Placeholder="Buscar por título, cliente o encargado" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="background-color: #FFC107; color: white;">Id</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Libro</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Cliente</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Status</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Fecha de Préstamo</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Fecha de Devolución</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Encargado</MudTh>
        <MudTh Style="background-color: #FFC107; color: white;">Acciones</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id" Style="background-color: #FFF8E1;">@context.Id</MudTd>
        <MudTd DataLabel="Libro" Style="background-color: #FFECB3;">
            
            @(context.Libro != null ? context.Libro.Titulo : "Sin libro")
        </MudTd>
        <MudTd DataLabel="Cliente" Style="background-color: #FFF8E1;">
            @(context.Cliente != null ? context.Cliente.Nombre : "Sin cliente")
        </MudTd>
        <MudTd DataLabel="Status" Style="background-color: #FFECB3;">@context.Status</MudTd>
        <MudTd DataLabel="Fecha de Préstamo" Style="background-color: #FFF8E1;">@context.FechaPrestamo.ToShortDateString()</MudTd>
        <MudTd DataLabel="Fecha de Devolución" Style="background-color: #FFECB3;">
            @(context.FechaDevolucion.HasValue ? context.FechaDevolucion.Value.ToShortDateString() : "Pendiente")
        </MudTd>
        <MudTd DataLabel="Encargado" Style="background-color: #FFF8E1;">@context.Encargado</MudTd>

        <MudTd Style="background-color: #FFECB3;">
            <MudButton Href="@($"/prestamo/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Edit"
                       Color="Color.Tertiary" Class="text-center">Editar</MudButton>
            <MudButton Href="@($"/prestamo/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Delete"
                       Color="Color.Error" Class="text-center">Eliminar</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Prestamo> prestamos = new List<Prestamo>();
    private IEnumerable<Prestamo> filteredPrestamos =>
        string.IsNullOrWhiteSpace(searchText)
            ? prestamos
            : prestamos.Where(p => (p.Libro?.Titulo.Contains(searchText, StringComparison.OrdinalIgnoreCase) ?? false)
                                   || (p.Cliente?.Nombre.Contains(searchText, StringComparison.OrdinalIgnoreCase) ?? false)
                                   || p.Encargado.Contains(searchText, StringComparison.OrdinalIgnoreCase));

    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        httpClient.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.GetStringAsync("prestamos/lista");
        prestamos = JsonSerializer.Deserialize<IEnumerable<Prestamo>>(httpResponse, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        navigationManager.NavigateTo("prestamo/agregar");
    }
}
